#Q15
wilcox.test(cortisol~child, data=needleData, correct=F, paired=F)
#16
t.test(cortisol~child, data=needleData, paired=F,var=T)
#17
#Risk=obs/total
(144/(144+170))/(141/(141+199))
#18
4/(sqrt(96))
#18
t=4/(sqrt(96))
pt(t,33,lower.tail=F)
pt(t,33,lower.tail=T)
pt(t,33,lower.tail=F)
#19
#MS = SS/df
#F = MSgroup/MSerr
#pf(F,df_group,dferr,lower.tail=F)
320/2
1525/3
180/3
1402/80
MSerr=1402/80
160/MSerr
508.3333/MSerr
60/MSerr
pf(9.13,2,80)
pf(9.13,2,80,lower.tail = F)
pf(29.01,3,80,lower.tail = F)
pf(3.42,3,80,lower.tail = F)
#Q23
LSDtest <- function(mean1,mean2,n,MSerr,dferr){
t_obs <- (mean1-mean2)/sqrt(MSerr*(2/n))
p_obs <- pt(abs(t_obs), dferr,lower.tail = F)*2
print(c("Fisher's LSD test, t_obs =", as.numeric(signif(t_obs,4))))
print(c("Fisher's LSD test, p_obs =", as.numeric(signif(p_obs,4))))
}
summary.aov(score~program,data=pnbData)
summary(aov(score~program,data=pnbData))
pnbmeans <- with(pnbData,tapply(score,program,mean))
summary(pnbData)
pnbmeans
pnbmeans <- with(pnbData,tapply(score,program,mean))
MSerr <- 0.929
dferr <- 96
n<-25
LSDtest(pnbmeans[2],pnbmeans[3],n,MSerr,dferr)
summary(aov(score~program,data=pnbData))
Eta = (46.03)/(46.03+89.14)
#Q25
summary(aov(score~animal*vigilance,data = vigilanceData))
P_Eta = (149.6)/(149.6+858.1)
9+4+12
#Q27
friend <- data.frame(Funny=9,
Boring=4,
Happy=12,
Sad=3)
View(friend)
chisq.test(friend)
#Q28
summary(aov(rt~colour+Error(subj/colour),data=colourData))
colourmeans<- with(colourData,tapply(rt,colour,mean))
#Q28
summary(colourData)
MSerr<- 4730
dferr<-32
n<-17
colourmeans
LSDtest(colourmeans[1],colourmeans[2],n,MSerr,dferr)
#Q29
friedman.test(rt~colour | subj, data=colourData)
noRed= subset(colourData, colour=="green"|colour=="blue")
wilcox.test(noRed)
noRed
wilcox.test(rt~colour, data=noRed)
wilcox.test(rt~colour, data=noRed,paired=T)
#Q1
qchisq(0.05,5)
qchisq(0.05,50)
summary(aov(score~program,data=pnbData))
summary(aov(rt~colour+Error(subj/colour),data=colourData))
data <- data.frame(A=c(10,10),
B=c(10,10),
C=c(10,10)
)
data
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10)
)
data
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "1,2,3"
)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "A,B,C"
)
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "A,B,C"
)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "A","B","C"
)
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "1","2","3"
)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "1", "2", "3"
)
#Q15
wilcox.test(cortisol~child, data=needleData, correct=F, paired=F)
needleData
#Q15
wilcox.test(cortisol~child, data=needleData, correct=F, paired=F)
#16
t.test(cortisol~child, data=needleData, paired=F,var=T)
#17
#Risk=obs/total
(144/(144+170))/(141/(141+199))
t=4/(sqrt(96))
pt(t,33,lower.tail=F)
t=4/(sqrt(96/34))
pt(t,33,lower.tail=F)
summary(pnbData)
summary(aov(score~program,data=pnbData))
pnbmeans <- with(pnbData,tapply(score,program,mean))
MSerr <- 0.929
dferr <- 96
n<-25
LSDtest(pnbmeans[2],pnbmeans[3],n,MSerr,dferr)
(pnbData)
summary(pnbData)
summary(aov(score~program,data=pnbData))
MSerr <- 0.929
dferr <- 96
n<-25
LSDtest(pnbmeans[2],pnbmeans[3],n,MSerr,dferr)
pnbmeans
LSDtest(pnbmeans[2],pnbmeans[3],n,MSerr,dferr)
Eta = (46.03)/(46.03+89.14)
Eta
#Q25
summary(aov(score~animal*vigilance,data = vigilanceData))
P_Eta = (149.6)/(149.6+858.1)
P_Eta
summary(aov(rt~colour+Error(subj/colour),data=colourData))
#Q27
friend <- data.frame(Funny=9,
Boring=4,
Happy=12,
Sad=3)
chisq.test(friend)
#Q28
summary(colourData)
summary(aov(rt~colour+Error(subj/colour),data=colourData))
colourmeans<- with(colourData,tapply(rt,colour,mean))
MSerr<- 4730
dferr<-32
n<-17
LSDtest(colourmeans[1],colourmeans[2],n,MSerr,dferr)
colourmeans[1]
colourmeans[2]
#Q29
friedman.test(rt~colour | subj, data=colourData)
noRed= subset(colourData, colour=="green"|colour=="blue")
wilcox.test(rt~colour, data=noRed,paired=T)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
row.names = "1", "2", "3"
)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10),
)
#Q14
data <- data.frame(A=c(10,10,10),
B=c(10,10,10)
)
View(data)
data <- data.frame(IV1=c("A","B","C"),
A=c(10,10,10),
B=c(10,10,10)
data
data <- data.frame(IV1=c("A","B","C"),
A=c(10,10,10),
B=c(10,10,10)
data <- data.frame(IV1=c("A","B","C"),
A=c(10,10,10),
B=c(10,10,10))
data <- data.frame(IV1=c("A","B","C"),
A=c(10,10,10),
B=c(10,10,10)
)
summary(aov(A~B,data = data))
### Social Drumming Analysis ###
library(tidyverse)
library(zoo)
library(ggplot2)
# Importing
setwd("~/McMaster/Third Year/PNB 3QQ3/Drumming and Cooperation/Data")
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
data$participant <- as.factor(data$participant)
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
#onset difference between 2 participants and individual participants
data$onset_diff_2p <- data$start_s - lag(data$start_s, 1)
data <- data %>%
group_by(participant) %>%
mutate(onset_diff_1p = start_s - lag(start_s, 1))
#Skip flagging mechanisms
data$flag_skip <- ifelse(data$participant + lag(data$participant,1) == 3,0,1)
# Rolling averages
data <- data %>%
group_by(participant) %>%
mutate(roll_1p = rollmean(onset_diff_1p, k=5, align = "right", fill = NA))
data <- data %>%
ungroup %>%
mutate(roll_2p = rollmean(onset_diff_2p, k=5, align = "right", fill = NA))
# Imputing missed hits
data_cut <- data[1:which(data$flag_skip==1)[1] - 1,]
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
onset_diff_1p=data$roll_1p[60])
data_cut <- data_cut %>%
rows_insert(new_row, by = names(new_row))
which(data$flag_skip==1)
gap <- (which(data$flag_skip==1)[2])-(which(data$flag_skip==1)[1])
data_cut2 <- data[which(data$flag_skip==1)[1]+1:gap-1,]
new_row2 <- tibble(participant=1,
onset_diff_2p=data$roll_2p[9],
onset_diff_1p=data$roll_1p[8])
data_cut3 <- data[which(data$flag_skip==1)[2] + 1:41,]
data_list <- list(data_cut, data_cut2, data_cut3)
data_fixed <- data_list %>% reduce(full_join)
# Flags for speed
flag_2p <- 2*sd(data$onset_diff_2p, na.rm = T)
data$flag_2p_fast <- ifelse(data$onset_diff_2p < mean(data$onset_diff_2p,na.rm=T)-flag_2p,1,0)
data$flag_2p_slow <- ifelse(data$onset_diff_2p > mean(data$onset_diff_2p,na.rm=T)+flag_2p,1,0)
data$onset_diff_2p_est1 <- ifelse(data$flag_fast2p==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data <- data_list %>% reduce(full_join)
# Flags for speed
flag_2p <- 2*sd(data$onset_diff_2p, na.rm = T)
data$flag_2p_fast <- ifelse(data$onset_diff_2p < mean(data$onset_diff_2p,na.rm=T)-flag_2p,1,0)
data$flag_2p_slow <- ifelse(data$onset_diff_2p > mean(data$onset_diff_2p,na.rm=T)+flag_2p,1,0)
data$onset_diff_2p_est1 <- ifelse(data$flag_fast2p==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
# Imputing missed hits
data_cut <- data[1:which(data$flag_skip==1)[1] - 1,]
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
onset_diff_1p=data$roll_1p[60],
roll_2p=data$roll_2p[61])
data_cut <- data_cut %>%
rows_insert(new_row, by = names(new_row))
which(data$flag_skip==1)
gap <- (which(data$flag_skip==1)[2])-(which(data$flag_skip==1)[1])
data_cut2 <- data[which(data$flag_skip==1)[1]+1:gap-1,]
new_row2 <- tibble(participant=1,
onset_diff_2p=data$roll_2p[9],
onset_diff_1p=data$roll_1p[8],
roll_2p=data$roll_2p[9])
data_cut3 <- data[which(data$flag_skip==1)[2] + 1:41,]
data_list <- list(data_cut, data_cut2, data_cut3)
data <- data_list %>% reduce(full_join)
data$onset_diff_2p_est1 <- ifelse(data$flag_fast2p==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
#onset difference between 2 participants and individual participants
data$onset_diff_2p <- data$start_s - lag(data$start_s, 1)
data <- data %>%
group_by(participant) %>%
mutate(onset_diff_1p = start_s - lag(start_s, 1))
#Skip flagging mechanisms
data$flag_skip <- ifelse(data$participant + lag(data$participant,1) == 3,0,1)
# Rolling averages
data <- data %>%
group_by(participant) %>%
mutate(roll_1p = rollmean(onset_diff_1p, k=5, align = "right", fill = NA))
data <- data %>%
ungroup %>%
mutate(roll_2p = rollmean(onset_diff_2p, k=5, align = "right", fill = NA))
# Imputing missed hits
data_cut <- data[1:which(data$flag_skip==1)[1] - 1,]
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
onset_diff_1p=data$roll_1p[60],
roll_2p=data$roll_2p[61])
data_cut <- data_cut %>%
rows_insert(new_row, by = names(new_row))
which(data$flag_skip==1)
gap <- (which(data$flag_skip==1)[2])-(which(data$flag_skip==1)[1])
data_cut2 <- data[which(data$flag_skip==1)[1]+1:gap-1,]
new_row2 <- tibble(participant=1,
onset_diff_2p=data$roll_2p[9],
onset_diff_1p=data$roll_1p[8],
roll_2p=data$roll_2p[9])
data_cut3 <- data[which(data$flag_skip==1)[2] + 1:41,]
data_list <- list(data_cut, data_cut2, data_cut3)
data <- data_list %>% reduce(full_join)
# Flags for speed
flag_2p <- 2*sd(data$onset_diff_2p, na.rm = T)
data$flag_2p_fast <- ifelse(data$onset_diff_2p < mean(data$onset_diff_2p,na.rm=T)-flag_2p,1,0)
data$flag_2p_slow <- ifelse(data$onset_diff_2p > mean(data$onset_diff_2p,na.rm=T)+flag_2p,1,0)
data$onset_diff_2p_est1 <- ifelse(data$flag_fast2p==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data$onset_diff_2p_est <- ifelse(data$flag_slow2p==1,(data$roll_2p + lag(data$onset_diff_2p1,1)),data$onset_diff_2p1)
data$onset_diff_2p_est <- ifelse(data$flag_slow2p==1,(data$roll_2p + lag(data$onset_diff_2p1,1)),data$onset_diff_2p1)
data <- data %>%
select(-start_s, -end_s, -leng, -pitch)
data$onset_diff_2p_est1 <- ifelse(data$flag_fast2p==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data$onset_diff_2p_est1 <- ifelse(data$flag_2p_fast==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data$onset_diff_2p_est <- ifelse(data$flag_2p_slow==1,(data$roll_2p + lag(data$onset_diff_2p1,1)),data$onset_diff_2p1)
data$onset_diff_2p_est <- ifelse(data$flag_2p_slow==1,(data$roll_2p + lag(data$onset_diff_2p_est1,1)),data$onset_diff_2p1)
data$onset_diff_2p_est <- ifelse(data$flag_2p_slow==1,(data$roll_2p + lag(data$onset_diff_2p_est1,1)),data$onset_diff_2p_est1)
# Basic line plot with points
data$hit_number <- 1:nrow(data)
ggplot(data=data_fixed, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data_fixed, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
ggplot(data=data, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data_fixed, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
ggplot(data=data, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
# Basic line plot with points
data$participant <- as.factor(data$participant)
data$hit_number <- 1:nrow(data)
ggplot(data=data, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
rm(list=ls())
# Importing
setwd("~/McMaster/Third Year/PNB 3QQ3/Drumming and Cooperation/Data")
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
#onset difference between 2 participants and individual participants
data$onset_diff_2p <- data$start_s - lag(data$start_s, 1)
data <- data %>%
group_by(participant) %>%
mutate(onset_diff_1p = start_s - lag(start_s, 1))
#Skip flagging mechanisms
data$flag_skip <- ifelse(data$participant + lag(data$participant,1) == 3,0,1)
# Rolling averages
data <- data %>%
group_by(participant) %>%
mutate(roll_1p = rollmean(onset_diff_1p, k=5, align = "right", fill = NA))
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
#onset difference between 2 participants and individual participants
data$onset_diff_2p <- data$start_s - lag(data$start_s, 1)
data <- data %>%
group_by(participant) %>%
mutate(onset_diff_1p = start_s - lag(start_s, 1))
#Skip flagging mechanisms
data$flag_skip <- ifelse(data$participant + lag(data$participant,1) == 3,0,1)
data <- data %>%
ungroup %>%
mutate(roll_2p = rollmean(onset_diff_2p, k=5, align = "right", fill = NA))
# Cleaning pt 2
data <- data %>%
select(-start_s, -end_s, -leng, -pitch)
# Imputing missed hits
data_cut <- data[1:which(data$flag_skip==1)[1] - 1,]
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
onset_diff_1p=data$roll_1p[60],
roll_2p=data$roll_2p[61])
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
#onset_diff_1p=data$roll_1p[60],
roll_2p=data$roll_2p[61])
data_cut <- data_cut %>%
rows_insert(new_row, by = names(new_row))
which(data$flag_skip==1)
gap <- (which(data$flag_skip==1)[2])-(which(data$flag_skip==1)[1])
data_cut2 <- data[which(data$flag_skip==1)[1]+1:gap-1,]
new_row2 <- tibble(participant=1,
onset_diff_2p=data$roll_2p[9],
#onset_diff_1p=data$roll_1p[8],
roll_2p=data$roll_2p[9])
data_cut3 <- data[which(data$flag_skip==1)[2] + 1:41,]
data_list <- list(data_cut, data_cut2, data_cut3)
data <- data_list %>% reduce(full_join)
# Flags for speed
flag_2p <- 2*sd(data$onset_diff_2p, na.rm = T)
data$flag_2p_fast <- ifelse(data$onset_diff_2p < mean(data$onset_diff_2p,na.rm=T)-flag_2p,1,0)
data$flag_2p_slow <- ifelse(data$onset_diff_2p > mean(data$onset_diff_2p,na.rm=T)+flag_2p,1,0)
data$onset_diff_2p_est1 <- ifelse(data$flag_2p_fast==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data$onset_diff_2p_est <- ifelse(data$flag_2p_slow==1,(data$roll_2p + lag(data$onset_diff_2p_est1,1)),data$onset_diff_2p_est1)
# Basic line plot with points
data$participant <- as.factor(data$participant)
data$hit_number <- 1:nrow(data)
ggplot(data=data, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
rm(list=ls())
### Social Drumming Analysis ###
library(tidyverse)
library(zoo)
library(ggplot2)
# Importing
setwd("~/McMaster/Third Year/PNB 3QQ3/Drumming and Cooperation/Data")
data <- read.csv("101_trial1.csv",stringsAsFactors = T)
# Renaming variables to be readable
data <- data %>%
mutate(s_ppq = (s_ppq/(960*2)),e_ppq = (e_ppq/(960*2))) %>%
rename(start_s = s_ppq,end_s = e_ppq) %>%
select(-sel, -mut, -chan, -vel)
#adding a participant number to each drummer
data$participant <- ifelse(data$pitch==47,1,2)
#onset difference between 2 participants and individual participants
data$onset_diff_2p <- data$start_s - lag(data$start_s, 1)
data <- data %>%
group_by(participant) %>%
mutate(onset_diff_1p = start_s - lag(start_s, 1))
#Skip flagging mechanisms
data$flag_skip <- ifelse(data$participant + lag(data$participant,1) == 3,0,1)
data <- data %>%
ungroup %>%
mutate(roll_2p = rollmean(onset_diff_2p, k=5, align = "right", fill = NA))
# Cleaning pt 2
data <- data %>%
select(-start_s, -end_s, -leng, -pitch)
# Imputing missed hits
data_cut <- data[1:which(data$flag_skip==1)[1] - 1,]
new_row <- tibble(participant=1,
onset_diff_2p=data$roll_2p[61],
#onset_diff_1p=data$roll_1p[60],
roll_2p=data$roll_2p[61])
data_cut <- data_cut %>%
rows_insert(new_row, by = names(new_row))
which(data$flag_skip==1)
gap <- (which(data$flag_skip==1)[2])-(which(data$flag_skip==1)[1])
data_cut2 <- data[which(data$flag_skip==1)[1]+1:gap-1,]
new_row2 <- tibble(participant=1,
onset_diff_2p=data$roll_2p[9],
#onset_diff_1p=data$roll_1p[8],
roll_2p=data$roll_2p[9])
data_cut3 <- data[which(data$flag_skip==1)[2] + 1:41,]
data_list <- list(data_cut, data_cut2, data_cut3)
data <- data_list %>% reduce(full_join)
# Flags for speed
flag_2p <- 2*sd(data$onset_diff_2p, na.rm = T)
data$flag_2p_fast <- ifelse(data$onset_diff_2p < mean(data$onset_diff_2p,na.rm=T)-flag_2p,1,0)
data$flag_2p_slow <- ifelse(data$onset_diff_2p > mean(data$onset_diff_2p,na.rm=T)+flag_2p,1,0)
data$onset_diff_2p_est1 <- ifelse(data$flag_2p_fast==1,(data$roll_2p + lag(data$onset_diff_2p,1)),data$onset_diff_2p)
data$onset_diff_2p_est <- ifelse(data$flag_2p_slow==1,(data$roll_2p + lag(data$onset_diff_2p_est1,1)),data$onset_diff_2p_est1)
# Basic line plot with points
data$participant <- as.factor(data$participant)
data$hit_number <- 1:nrow(data)
ggplot(data=data, aes(x=hit_number, y=onset_diff_2p_est)) +
geom_line(aes(group=participant, color=participant))+
geom_point(aes(group=participant, color=participant))+
geom_smooth(data=data, aes(x=hit_number,y = roll_2p),size=2)+
geom_vline(xintercept = 15,size=1)
